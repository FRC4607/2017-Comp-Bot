// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/ChangeMode.h"
#include "Commands/Feed.h"
#include "Commands/Suck.h"
#include "Commands/Shooting.h"
#include "Commands/UnSuck.h"
<<<<<<< HEAD
#include "Commands/RotateToAngle.h"
#include "Commands/EnableDriving.h"
=======
#include "Commands/RotateToAngle.h"
>>>>>>> branch 'master' of https://github.com/FRC4607/FRC-2017.git

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
    // Process operator interface input here.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    driver.reset(new Joystick(0));
    captain.reset(new Joystick(1));
    
    tractionMode.reset(new JoystickButton(driver.get(), 3));
    tractionMode->WhenPressed(new ChangeMode(7));

    fieldOrient.reset(new JoystickButton(driver.get(), 7));
    fieldOrient->WhenPressed(new ChangeMode(9));

    gyroReset.reset(new JoystickButton(driver.get(), 11));
    gyroReset->WhenPressed(new ChangeMode(8));

    fireAway.reset(new JoystickButton(captain.get(), 1));
    fireAway->WhenPressed(new Shooting());

    suckItUp.reset(new JoystickButton(captain.get(), 2));
    suckItUp->WhenPressed(new Suck());

    getItOut.reset(new JoystickButton(captain.get(), 9));
    getItOut->WhenPressed(new UnSuck());

    loadItUp.reset(new JoystickButton(captain.get(), 4));
    loadItUp->WhenPressed(new Feed());

    rotateToAngle.reset(new JoystickButton(driver.get(), 10));
<<<<<<< HEAD
    rotateToAngle->WhenPressed(new RotateToAngle(10));

    enableDriving.reset(new JoystickButton(driver.get(), 12));
    enableDriving->WhenPressed(new EnableDriving());
=======
    rotateToAngle->WhenPressed(new RotateToAngle(90));
>>>>>>> branch 'master' of https://github.com/FRC4607/FRC-2017.git





    // SmartDashboard Buttons
    SmartDashboard::PutData("Traction Mode", new ChangeMode(7));
    SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

std::shared_ptr<Joystick> OI::getDriver() {
   return driver;
}

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
